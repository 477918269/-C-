一.概念：
完成相同的行为，当不同的对象去完成时会出现不同的状态。在C++这个面向对象的语言之中，所谓的多态就是“一个接口，多种实现”。
例子：
不同的人去车站买票，成年人买的时全票，学生买的是学生半价票。
而多态可以分为静态多态和动态多态。
这两者的区别是程序是在编译期间还是在运行期间将函数调用和函数实现管理起来的。用专业的术语来说，即函数地址是早绑定还是晚绑定的

所谓的静态多态，就是在编译期就可以确定函数地址，直接进行调用的。我们在C++常用的重载就是静态多态

所谓的动态多态，就是函数地址只有到运行期间根据其实际类型调用相应的方法来确定，而不能在编译期间确定。C++的虚函数就是动态多态

至于C++为什么要使用多态，就要提到一个概念：接口继承和实现继承。
C++的普通继承是一个实现继承，目的是为了让派生类继承基类的函数实现，实现函数复用。
而多态是一种接口继承，目的是为了重写，继承基类的接口并在此基础上实现新的方法。

最典型的接口继承就是抽象类，抽象类的写法和虚函数大致一样，都是virtual + 函数类型 + 函数名 + 参数列表唯一的区别是在函数声明的末尾加了个 =0。
当派生类继承了这个接口类，不能直接实例化出对象，只能重写虚函数，才能够实例化出对象。

而要使用动态多态就必须具备两个条件
1.必须是虚函数、
2.必须通过指针或引用调用虚函数。


